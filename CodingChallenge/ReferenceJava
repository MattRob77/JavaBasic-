1. Datatypes:

Datatypes are of 2 types

Primitive type, Wrapper type



Primitive Data Type

Wrapper Class

char

Character

byte

Byte

short

Short

int

Integer

long

Long

float

Float

double

Double

boolean

Boolean



Note: String type is a special type of class in Java



2. Variable:

Syntax:



int variableName = value ;



Example:



int foo = 2 ;

String fooBar =  “hello world”   ;





3. Print Statement

Syntax:



System.out.println(value[as string]/variable);

Example:



String fooBar = “hello world”;

System.out.println(“Welcome”);   //prints Welcome

System.out.println(fooBar);   //prints hello world



4. Selection

IF

Syntax:



if(condition){



//block of statements



 }

Example:



if(foo>3){

    System.out.println("foo is greater than 3") ;

}







IF ELSE

Syntax:



if(condition){

 //block of statements

 } else{

//block of statements

}

Example:



if(foo > 3){

   System.out.println("foo is greater than 3");

} else{

   System.out.println("foo is not greater than 3");

 }

IF ELSE Ladder

Syntax:



if(condition){



       //block of statements



 } else if (condition) {



        //block of statements



} else {

      // block of statements

}

Example:



if(foo == 1){

    System.out.println("foo  equals 1") ;

} else if(foo == 2){

    System.out.println("foo equals 2") ;

} else{

    System.out.println("foo value is other than 1 and 2");

}



NESTED IF

Syntax:



if(condition){

    //block of statement

     if(condition){

          //block of statements

       } else{

         //block of statements

       }

} else{

  //block of statements

}

Example:



if(foo > 0){

       if(foo > 30){

            System.out.println("foo is greater than 30");

       } else{

           System.out.println("foo is not greater than 30");

       }

} else{

       System.out.println("foo is not greater than 0");

}











































SWITCH CASE

Syntax:



switch(expression){

      case value1:

         //statements

         break

      case value2:

          //statements

          break

          ....

      case valueN:

          //statements

           break

      default:

     //statements

}

Example:



var foo = 10;

switch(foo){

      case 5:

          System.out.println(“Five”);

         break;

      case 10:

           System.out.println(“Ten”);

          break;

      default:

            System.out.println(“Invalid Number”);

}





























































5. Iteration



FOR LOOP

Syntax:



for (initialization; test condition; iteration statement){

      //Statement(s) to be executed if test condition is true

}

Example:



for(int index=0; index<5; index++){

      System.out.println(index);

}



















WHILE LOOP

Syntax:



while (expression){

            //Statement(s) to be executed if expression is true

 }

Example:



int i=5 ;

while (i < 10){

             System.out.println(“Current Count : “,i);

            i++ ;

}

























Break

BREAK

Syntax:



break;

Example:



for(i=0; i<5; i++){

      System.out.println(i) ;

     if(i==2){

            break;        //Comes out of the loop id i == 2

            }

}

























Continue

CONTINUE

Syntax:



continue;

Example:



for(i=0; i<5; i++){

     if(i==1){

            continue ;

            }

      System.out.println(i);  // prints 0,2,3,4

}

























6. String

STRING

Syntax:



String variableName=value;

variableName.replace(“old_string”,”new_string”) ;

variableName.startsWith(“string_to_match”) ;

variableName. endsWith(“string_to_match”)  ;

variableName.toUpperCase() ;

variableName.toLowerCase() ;

String[] s=variableName.split(“string_based_on_split”) ;

Example:



String foo=”I love Java” ;

foo.replace(“l”,”L”) ;

foo.startsWith(“J”) ;

foo. endsWith(“a”) ;

foo.toUpperCase() ;

foo.toLowerCase() ;

foo.split(“ ”) ;





































7. Date

LocalDate,LocalTime,LocalDateTime

Syntax:



Date d=new Date();  //Java 6 and below

Calendar c=Calendar.getInstance();   //Java 7

LocalDate date=LocaDate.now();  //Java 8

LocalTime  time=LocalTime.now();

LocalDateTime dateTime=LocalDateTime.now();



Example:



LocalDate today=LocalDate.now() ;

String dateString = today.format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));  //Object to String

LocalDate today=LocalDate.parse( dateString , DateTimeFormatter.ofPattern(pattern)); //String to Object

int age=dob.until(today, ChronoUnit.YEARS);































8. Array

ARRAY

Syntax:



int[] arrayName = {value1,value2,value3,….,valueN}



Example:



 int[] placesToVisit = {"Paris", "New York"};



System.out.println(placesToVisit[0]);  //Indexing an array

// Paris



placesToVisit[1]("Switzerland");

System.out.println( placesToVisit[1]);    //  "Switzerland”



System.out.println( placesToVisit.length);   // 2



for(int i;i<arr.length;i++){

              System.out.println(i);

      }

// Paris

// Switzerland



Similarly, there are other functions.

















































9. Methods:

METHODS

Syntax:



accessSpecifier returnType methodName(){

      //method body

}



accessSpecifier returnType methodName(arguments…){

      //method body

}





Example:



class A{

public static void display(){

      System.out.println(“Hello World”);

}

public static void main(String a[]) {

display();

sum();

}



public int sum(int a, int b){

      int total = a+b;

      System.out.println(“Sum is”, total);

     return total;

}

}































































10. Exception



TRY, CATCH and FINALLY

Syntax:



try{

            //perform operations here

} catch(e){

            //If there is any exception, then execute this block

}finally{

            //This would always be executed

}

Example:



try {

            functionName()

} catch(e) {

            System.out.println("Not defined..")

} finally{

            System.out.println(“Program is executed with exception/without exception”)

}





































11. Variable Scope:



Local/instance/reference VARIABLE

Syntax:



class A{

int variable1=value  //instance variable

Customer c=null;     //reference variable

public  void functionName(){

//local variables are declared inside methods

int localInt=0;  //local variable

//method body

            [return]

}

}

class Customer{}

Example:



class A{int i=100



public void method1(){

            i+=1

}

 public static void main(String a[]){

System.out.println(i);

method1()

System.out.println(i)}}













































 
